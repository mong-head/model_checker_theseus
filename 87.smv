-- 레벨 : 87.lvl
-- 행 크기: 9  열 크기: 14
-- 테세우스위치: 613
-- 미노타르위치: 407
-- 골위치      : 614
MODULE main
VAR
--red : 테세우스, 999 : 탈출한 테세우스가 머무는 곳
--black : 미노타우르스
red: { 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
    201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
    301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314,
    401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
    501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
    601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
    701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
    801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814,
    901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914,
    999 };
black: { 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
    201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
    301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314,
    401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
    501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
    601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
    701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
    801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814,
    901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914 };
turn : boolean;

adir : {left,right,up,down};

DEFINE
notLeft := black=101 | black=201 | black=301 | black=401 | black=501 | black=601 | black=701 | black=801 | black=901 |
 black=103 | black=111 |
 black=202 | black=205 | black=206 | black=209 | black=211 | black=212 | black=213 | black=214 |
 black=303 | black=311 | black=312 |
 black=402 | black=406 | black=407 | black=410 | black=412 | black=413 | black=414 |
 black=502 | black=503 | black=504 | black=505 | black=506 | black=508 | black=509 | black=510 | black=511 | black=512 |
 black=606 | black=607 | black=609 | black=610 | black=611 | black=612 | black=613 | black=614 |
 black=705 | black=708 | black=711 | black=714 |
 black=802 | black=803 | black=804 | black=805 | black=808 | black=814 |
 black=909;
notLeft_r := red=101 | red=201 | red=301 | red=401 | red=501 | red=601 | red=701 | red=801 | red=901 |
  red=103 | red=111 |
  red=202 | red=205 | red=206 | red=209 | red=211 | red=212 | red=213 | red=214 |
  red=303 | red=311 | red=312 |
  red=402 | red=406 | red=407 | red=410 | red=412 | red=413 | red=414 |
  red=502 | red=503 | red=504 | red=505 | red=506 | red=508 | red=509 | red=510 | red=511 | red=512 |
  red=606 | red=607 | red=609 | red=610 | red=611 | red=612 | red=613 | red=614 |
  red=705 | red=708 | red=711 | red=714 |
  red=802 | red=803 | red=804 | red=805 | red=808 | red=814 |
  red=909;
-- fill here
notRight := black=114 | black=214 | black=314 | black=414 | black=514 | black=614 | black=714 | black=814 | black=914 |
   black=102 | black=110 |
   black=201 | black=204 | black=205 | black=208 | black=210 | black=211 | black=212 | black=213 |
   black=302 | black=310 | black=311 |
   black=401 | black=405 | black=406 | black=409 | black=411 | black=412 | black=413 |
   black=501 | black=502 | black=503 | black=504 | black=505 | black=507 | black=508 | black=509 | black=510 | black=511 |
   black=605 | black=606 | black=608 | black=609 | black=610 | black=611 | black=612 | black=613 |
   black=704 | black=707 | black=710 | black=713 |
   black=801 | black=802 | black=803 | black=804 | black=807 | black=813 |
   black=908;
notRight_r := red=114 | red=214 | red=314 | red=414 | red=514 | red=614 | red=714 | red=814 | red=914 |
  red=102 | red=110 |
  red=201 | red=204 | red=205 | red=208 | red=210 | red=211 | red=212 | red=213 |
  red=302 | red=310 | red=311 |
  red=401 | red=405 | red=406 | red=409 | red=411 | red=412 | red=413 |
  red=501 | red=502 | red=503 | red=504 | red=505 | red=507 | red=508 | red=509 | red=510 | red=511 |
  red=605 | red=606 | red=608 | red=609 | red=610 | red=611 | red=612 | red=613 |
  red=704 | red=707 | red=710 | red=713 |
  red=801 | red=802 | red=803 | red=804 | red=807 | red=813 |
  red=908;

notUp := black=101 | black=102 | black=103 | black=104 | black=105 | black=106 | black=107 | black=108 | black=109 | black=110 | black=111 | black=112 | black=113 | black=114 |
  black=204 | black=206 | black=207 | black=210 | black=212 | black=213 |
  black=302 | black=303 | black=307 | black=310 |
  black=404 | black=405 | black=407 | black=409 |
  black=507 |
  black=613 | black=614 |
  black=702 | black=703 | black=704 |
  black=801 | black=802 | black=805 | black=806 | black=809 | black=811 | black=813 |
  black=905 | black=906 | black=910 | black=911 | black=912;
notUp_r := red=101 | red=102 | red=103 | red=104 | red=105 | red=106 | red=107 | red=108 | red=109 | red=110 | red=111 | red=112 | red=113 | red=114 |
  red=204 | red=206 | red=207 | red=210 | red=212 | red=213 |
  red=302 | red=303 | red=307 | red=310 |
  red=404 | red=405 | red=407 | red=409 |
  red=507 |
  red=613 | red=614 |
  red=702 | red=703 | red=704 |
  red=801 | red=802 | red=805 | red=806 | red=809 | red=811 | red=813 |
  red=905 | red=906 | red=910 | red=911 | red=912;

notDown := black=901 | black=902 | black=903 | black=904 | black=905 | black=906 | black=907 | black=908 | black=909 | black=910 | black=911 | black=912 | black=913 | black=914 |
  black=104 | black=106 | black=107 | black=110 | black=112 | black=113 |
  black=202 | black=203 | black=207 | black=210 |
  black=304 | black=305 | black=307 | black=309 |
  black=407 |
  black=513 | black=514 |
  black=602 | black=603 | black=604 |
  black=701 | black=702 | black=705 | black=706 | black=709 | black=711 | black=713 |
  black=805 | black=806 | black=810 | black=811 | black=812;
notDown_r := red=901 | red=902 | red=903 | red=904 | red=905 | red=906 | red=907 | red=908 | red=909 | red=910 | red=911 | red=912 | red=913 | red=914 |
  red=104 | red=106 | red=107 | red=110 | red=112 | red=113 |
  red=202 | red=203 | red=207 | red=210 |
  red=304 | red=305 | red=307 | red=309 |
  red=407 |
  red=513 | red=514 |
  red=602 | red=603 | red=604 |
  red=701 | red=702 | red=705 | red=706 | red=709 | red=711 | red=713 |
  red=805 | red=806 | red=810 | red=811 | red=812;

redStart := 613;
redGoal := 614;
blkStart := 407;

ASSIGN
init(turn) := TRUE;
next(turn) := !turn;
init(red) := redStart;
-- fill here
init(adir):={right,left,up,down};
next(adir):={right,left,up,down};

next(red) :=
case
  red=black : red; --잡히면 그냥 그 state에 계속 남아있어서 999못감
  (turn=TRUE)&(red!=999) :
    case
      red=redGoal : 999; --잡히지 않고 goal로 갔을 경우 999로 감
      (adir=left) & !notLeft_r : red - 1;
      (adir=right) & !notRight_r : red + 1;
      (adir=up) & !notUp_r: red - 100;
      (adir=down) & !notDown_r: red + 100;
      TRUE : red; --left,right,up,down못가는경우
    esac;
  TRUE : red; --turn이 false인경우
esac;

init(black) := blkStart;
-- fill here
--black은 turn과 상관없이 움직임
next(black) :=
case
  ((black mod 100)-(next(red) mod 100) > 0) : --left 가야하는 경우
  case
    !notLeft : black - 1;
    TRUE :
    case
      (black/100 - next(red)/100 > 0) & !notUp : black - 100;
      (black/100 - next(red)/100 < 0) & !notDown : black + 100;
      TRUE : black; --up,down못가는 경우
    esac;
  esac;

  ((black mod 100)-(next(red) mod 100) < 0) : --right가야하는 경우
  case
    !notRight : black + 1;
    TRUE :
    case
      (black/100 - next(red)/100 > 0) & !notUp : black - 100;
      (black/100 - next(red)/100 < 0) & !notDown : black + 100;
      TRUE : black; --up,down못가는 경우
    esac;
  esac;

  (black mod 100)-(next(red) mod 100) = 0 : --위,아래만 가야하는 경우
  case
    (black - next(red) > 0) & !notUp : black - 100;
    (black - next(red) < 0) & !notDown : black + 100;
    black - next(red) = 0: black; --black이 red를 따라잡음
    TRUE : black; --up,down못가는 경우
  esac;

  TRUE : black; --left,right못가는 경우, red가 999인경우(red가 도착한경우)
esac;

LTLSPEC -- fill here
--red가 골인 지점에 도착 못하거나 미노타우르스가 태세우스를 따라잡을 때 인
--state가 미래에 한번 있는 모든 경로가 있는지를 검사하면 그렇지 않은
--즉, red가 골인지점에 도착하고 미노타우르스가 태세우스를 따라잡지 못하는 때에 false를 return하고
--counterexample를 내놓을 것이라 이 것을 썼다.
G(F((red != 999)|(red = black)))
--!(!(red=black)U(red=999))
